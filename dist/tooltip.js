(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Tooltip"] = factory();
	else
		root["Tooltip"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _tooltip = __webpack_require__(1);\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _tooltip2.default;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRvb2x0aXAgZnJvbSAnLi9saWIvdG9vbHRpcCc7XG5cbmV4cG9ydCBkZWZhdWx0IFRvb2x0aXA7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaW5kZXguanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Tooltip = function () {\n  function Tooltip() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Tooltip);\n\n    this.settings = {\n      selector: 'a',\n      tooltipClass: 'tooltip',\n      margin: 10,\n      position: 'top-center'\n    };\n\n    Object.keys(options).forEach(function (option) {\n      _this.settings[option] = options[option];\n    });\n\n    this.tooltippedElements = document.querySelectorAll(this.settings.selector);\n\n    this.createTooltip();\n  }\n\n  _createClass(Tooltip, [{\n    key: 'getDesiredPosition',\n    value: function getDesiredPosition(element) {\n      var posSplit = element.dataset.position.split('-');\n\n      // for centered position only one alignment might be provided,\n      // eg. top === top-center\n      if (posSplit.length < 2) {\n        posSplit.push('center');\n      }\n\n      return {\n        side: posSplit[0],\n        alignment: posSplit[1]\n      };\n    }\n  }, {\n    key: 'resetClass',\n    value: function resetClass() {\n      this.tooltip.removeAttribute('class');\n      this.tooltip.classList.add(this.settings.tooltipClass);\n    }\n  }, {\n    key: 'setClass',\n    value: function setClass(tooltipPosition) {\n      this.tooltip.classList.add(this.settings.tooltipClass + '--' + tooltipPosition);\n    }\n  }, {\n    key: 'setTooltipVisibility',\n    value: function setTooltipVisibility() {\n      var visibilityClass = this.settings.tooltipClass + '--visible';\n\n      if (!this.tooltip.classList.contains(visibilityClass)) {\n        this.tooltip.classList.add(visibilityClass);\n      } else {\n        this.tooltip.classList.remove(visibilityClass);\n      }\n\n      if (!this.tooltip.classList.contains(visibilityClass)) {\n        this.tooltip.removeAttribute('style');\n        this.resetClass();\n      }\n    }\n  }, {\n    key: 'calcCoordinates',\n    value: function calcCoordinates(elementRect, position) {\n      var tooltipBounding = this.tooltip.getBoundingClientRect();\n      var elementBounding = elementRect;\n      var pageScroll = Tooltip.getScroll();\n\n      var coordinates = {\n        x: pageScroll.x,\n        y: pageScroll.y\n      };\n\n      // top & bottom\n\n      if (position.side === 'top' || position.side === 'bottom') {\n        if (position.alignment === 'start') {\n          coordinates.x += elementBounding.left;\n        }\n\n        if (position.alignment === 'center') {\n          coordinates.x += elementBounding.left + (elementBounding.width / 2 - tooltipBounding.width / 2);\n        }\n\n        if (position.alignment === 'end') {\n          coordinates.x += elementBounding.right - tooltipBounding.width;\n        }\n      }\n\n      if (position.side === 'top') {\n        coordinates.y += elementBounding.top - tooltipBounding.height - this.settings.margin;\n      }\n\n      if (position.side === 'bottom') {\n        coordinates.y += elementBounding.bottom + this.settings.margin;\n      }\n\n      // left & right\n\n      if (position.side === 'left' || position.side === 'right') {\n        if (position.alignment === 'start') {\n          coordinates.y += elementBounding.top;\n        }\n\n        if (position.alignment === 'center') {\n          coordinates.y += elementBounding.top + (elementBounding.height / 2 - tooltipBounding.height / 2);\n        }\n\n        if (position.alignment === 'end') {\n          coordinates.y += elementBounding.bottom - tooltipBounding.height;\n        }\n      }\n\n      if (position.side === 'left') {\n        coordinates.x += elementBounding.left - this.settings.margin - tooltipBounding.width;\n      }\n\n      if (position.side === 'right') {\n        coordinates.x += elementBounding.right + this.settings.margin;\n      }\n\n      return coordinates;\n    }\n  }, {\n    key: 'checkVerticalSpace',\n    value: function checkVerticalSpace(elementBounding) {\n      var topSpace = elementBounding.top - this.settings.margin;\n      var bottomSpace = window.innerHeight - (elementBounding.bottom + this.settings.margin);\n\n      return {\n        start: topSpace > this.tooltip.offsetHeight,\n        end: bottomSpace > this.tooltip.offsetHeight\n      };\n    }\n  }, {\n    key: 'checkHorizontalSpace',\n    value: function checkHorizontalSpace(elementBounding) {\n      var leftSpace = elementBounding.left - this.settings.margin;\n      var rightSpace = window.innerWidth - (elementBounding.right + this.settings.margin);\n\n      return {\n        start: leftSpace > this.tooltip.offsetWidth,\n        end: rightSpace > this.tooltip.offsetWidth\n      };\n    }\n\n    // check space on sides in the viewport\n\n  }, {\n    key: 'getPossibleSides',\n    value: function getPossibleSides(elementBounding) {\n      return {\n        vertical: this.checkVerticalSpace(elementBounding),\n        horizontal: this.checkHorizontalSpace(elementBounding)\n      };\n    }\n\n    // compare desired position & possible space on sides;\n    // if desired is not possible, return best possible position\n\n  }, {\n    key: 'getActualPosition',\n    value: function getActualPosition(desired, possible) {\n      var positionMap = {\n        top: 'start',\n        bottom: 'end',\n        left: 'start',\n        right: 'end'\n      };\n\n      var oppositeMap = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left',\n        vertical: 'horizontal',\n        horizontal: 'vertical'\n      };\n\n      var axis = desired.side === 'top' || desired.side === 'bottom' ? 'vertical' : 'horizontal';\n\n      var getSide = function getSide(wantedAxis, wantedSide) {\n        var theAxis = possible[wantedAxis];\n        var side = void 0;\n\n        if (theAxis[positionMap[wantedSide]]) {\n          side = wantedSide;\n        } else if (theAxis[positionMap[oppositeMap[wantedSide]]]) {\n          side = oppositeMap[wantedSide];\n        } else {\n          side = getSide(oppositeMap[wantedAxis], wantedSide);\n        }\n\n        return side;\n      };\n\n      var getAlignment = function getAlignment(wantedAxis, wantedAlignment) {\n        var possibleAlign = possible[wantedAxis];\n        var alignment = void 0;\n\n        if (possibleAlign.start && possibleAlign.end) {\n          alignment = wantedAlignment;\n        } else if (!possibleAlign.start && !possibleAlign.end) {\n          alignment = 'center';\n        } else if (!possibleAlign.start) {\n          alignment = 'start';\n        } else if (!possibleAlign.end) {\n          alignment = 'end';\n        }\n\n        return alignment;\n      };\n\n      return {\n        side: getSide(axis, desired.side),\n        alignment: getAlignment(oppositeMap[axis], desired.alignment)\n      };\n    }\n  }, {\n    key: 'setTooltipPosition',\n    value: function setTooltipPosition(element) {\n      var elementRect = element.getBoundingClientRect();\n      var desiredPosition = this.getDesiredPosition(element);\n      var possibleSides = this.getPossibleSides(elementRect);\n      var actualPosition = this.getActualPosition(desiredPosition, possibleSides);\n      var coordinates = this.calcCoordinates(elementRect, actualPosition);\n\n      this.tooltip.style.left = coordinates.x + 'px';\n      this.tooltip.style.top = coordinates.y + 'px';\n\n      this.setClass(actualPosition.side + '-' + actualPosition.alignment);\n    }\n  }, {\n    key: 'setTooltipContent',\n    value: function setTooltipContent(content) {\n      this.tooltip.textContent = content;\n    }\n  }, {\n    key: 'mouseEnterHandler',\n    value: function mouseEnterHandler(event) {\n      var element = event.currentTarget;\n\n      this.setTooltipContent(element.dataset.tooltip);\n      this.setTooltipPosition(element);\n      this.setTooltipVisibility();\n    }\n  }, {\n    key: 'mouseLeaveHandler',\n    value: function mouseLeaveHandler() {\n      this.setTooltipVisibility();\n    }\n  }, {\n    key: 'bindElementEvents',\n    value: function bindElementEvents(element) {\n      var _this2 = this;\n\n      element.addEventListener('mouseenter', function (event) {\n        return _this2.mouseEnterHandler(event);\n      });\n      element.addEventListener('focus', function (event) {\n        return _this2.mouseEnterHandler(event);\n      });\n\n      element.addEventListener('mouseleave', function (event) {\n        return _this2.mouseLeaveHandler(event);\n      });\n      element.addEventListener('blur', function (event) {\n        return _this2.mouseLeaveHandler(event);\n      });\n    }\n  }, {\n    key: 'createTooltipData',\n    value: function createTooltipData() {\n      var _this3 = this;\n\n      [].concat(_toConsumableArray(this.tooltippedElements)).forEach(function (element) {\n        var elementHas = Tooltip.elHasNonEmptyAttr(element);\n\n        if (elementHas('title') && !elementHas('data-tooltip')) {\n          element.dataset.tooltip = element.getAttribute('title');\n          element.setAttribute('title', '');\n        }\n\n        if (!elementHas('data-position')) {\n          element.dataset.position = _this3.settings.position;\n        }\n\n        if (elementHas('data-tooltip')) {\n          _this3.bindElementEvents(element);\n        }\n      });\n    }\n  }, {\n    key: 'createTooltip',\n    value: function createTooltip() {\n      var tooltip = document.createElement('div');\n      tooltip.classList.add(this.settings.tooltipClass);\n      document.body.appendChild(tooltip);\n\n      this.tooltip = tooltip;\n      this.createTooltipData();\n    }\n  }], [{\n    key: 'elHasNonEmptyAttr',\n    value: function elHasNonEmptyAttr(el) {\n      return function (attr) {\n        return el.hasAttribute(attr) && el.getAttribute(attr) !== '';\n      };\n    }\n  }, {\n    key: 'getScroll',\n    value: function getScroll() {\n      var scroll = {};\n\n      scroll.x = window.pageXOffset !== undefined ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\n      scroll.y = window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\n      return scroll;\n    }\n  }]);\n\n  return Tooltip;\n}();\n\nexports.default = Tooltip;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);
});